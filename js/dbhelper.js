class DBHelper{static get DATABASE_URL(){return`http://localhost:${1337}/restaurants`}static openDatabase(){return navigator.serviceWorker?idb.open('restaurants',1,function(a){a.createObjectStore('restaurants',{keyPath:'id'})}):Promise.resolve()}static populateDatabase(a){return DBHelper.openDatabase().then(function(b){if(b){var c=b.transaction('restaurants','readwrite'),d=c.objectStore('restaurants');return a.forEach(function(e){d.put(e)}),c.complete}})}static getIdBRestaurants(){return DBHelper.openDatabase().then(function(a){if(a){var b=a.transaction('restaurants'),c=b.objectStore('restaurants');return c.getAll()}})}static fetchRestaurants(a){return DBHelper.getIdBRestaurants().then(b=>{return b.length?b:fetch(DBHelper.DATABASE_URL).then(function(c){return c.json()}).then(c=>{return DBHelper.populateDatabase(c),c})}).then(b=>{a(null,b)})}static fetchRestaurantById(a,b){DBHelper.fetchRestaurants((c,d)=>{if(c)b(c,null);else{const e=d.find(f=>f.id==a);e?b(null,e):b('Restaurant does not exist',null)}})}static fetchRestaurantByCuisine(a,b){DBHelper.fetchRestaurants((c,d)=>{if(c)b(c,null);else{const e=d.filter(f=>f.cuisine_type==a);b(null,e)}})}static fetchRestaurantByNeighborhood(a,b){DBHelper.fetchRestaurants((c,d)=>{if(c)b(c,null);else{const e=d.filter(f=>f.neighborhood==a);b(null,e)}})}static fetchRestaurantByCuisineAndNeighborhood(a,b,c){DBHelper.fetchRestaurants((d,e)=>{if(d)c(d,null);else{let f=e;'all'!=a&&(f=f.filter(g=>g.cuisine_type==a )),'all'!=b&&(f=f.filter(g=>g.neighborhood==b)),c(null,f)}})}static fetchNeighborhoods(a){DBHelper.fetchRestaurants((b,c)=>{if(b)a(b,null);else{const d=c.map((f,g)=>c[g].neighborhood),e=d.filter((f,g)=>d.indexOf(f)==g);a(null,e)}})}static fetchCuisines(a){DBHelper.fetchRestaurants((b,c)=>{if(b)a(b,null);else{const d=c.map((f,g)=>c[g].cuisine_type),e=d.filter((f,g)=>d.indexOf(f)==g);a(null,e)}})}static urlForRestaurant(a){return`./restaurant.html?id=${a.id}`}static imageUrlForRestaurant(a){return void 0===a.photograph&&(a.photograph=10),`/img/${a.photograph}.webp`}static mapMarkerForRestaurant(a){const c=new L.marker([a.latlng.lat,a.latlng.lng],{title:a.name,alt:a.name,url:DBHelper.urlForRestaurant(a)});return c.addTo(newMap),c}}